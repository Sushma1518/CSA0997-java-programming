import java.util.Scanner;
interface Marks {
    void inputMarks();
}
interface Result extends Marks {
    void calculateTotal();
    void calculateAggregate();
    void displayGrade();
}
class Student implements Result {
    private int python, cProgramming, mathematics, physics, chemistry, professionalEthics;
    private int total;
    private double aggregate;
    @Override
    public void inputMarks() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the marks in python: ");
        python = scanner.nextInt();
        System.out.print("Enter the marks in c programming: ");
        cProgramming = scanner.nextInt();
        System.out.print("Enter the marks in Mathematics: ");
        mathematics = scanner.nextInt();
        System.out.print("Enter the marks in Physics: ");
        physics = scanner.nextInt();
        System.out.print("Enter the marks in Chemistry: ");
        chemistry = scanner.nextInt();
        System.out.print("Enter the marks in Professional Ethics: ");
        professionalEthics = scanner.nextInt();
    }
    @Override
    public void calculateTotal() {
        total = python + cProgramming + mathematics + physics + chemistry + professionalEthics;
    }
    @Override
    public void calculateAggregate() {
        aggregate = total / 6.0;
    }
    @Override
    public void displayGrade() {
        System.out.println("Total= " + total);
        System.out.println("Aggregate = " + aggregate);
        if (aggregate > 75) {
            System.out.println("Class: DISTINCTION");
        } else if (aggregate >= 60 && aggregate <= 75) {
            System.out.println("Class: FIRST DIVISION");
        } else if (aggregate >= 50 && aggregate < 60) {
            System.out.println("Class: SECOND DIVISION");
        } else if (aggregate >= 40 && aggregate < 50) {
            System.out.println("Class: THIRD DIVISION");
        } else {
            System.out.println("Class: FAIL");
        }
    }
}
class StudentGradeProgram {
    public static void main(String[] args) {
        Student student = new Student();
        student.inputMarks();
        student.calculateTotal();
        student.calculateAggregate();
        student.displayGrade();
    }
}
